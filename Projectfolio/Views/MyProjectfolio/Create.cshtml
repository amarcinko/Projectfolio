@model Projectfolio.Models.ProjectViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Create", "MyProjectfolio", null, FormMethod.Post, new {enctype = "multipart/form-data"})) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Project</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.ProjectName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.ProjectName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProjectName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ShortDesc, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.TextAreaFor(model => model.ShortDesc, new { @class = "form-control", @rows = 5 })
                        @Html.ValidationMessageFor(model => model.ShortDesc, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.isPublic, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.isPublic)
                            @Html.ValidationMessageFor(model => model.isPublic, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.isFinished, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.isFinished)
                            @Html.ValidationMessageFor(model => model.isFinished, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.URL, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.URL, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.URL, "", new { @class = "text-danger" })
                    </div>
                </div>
                </div>
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @rows = 10 })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AssignedCategories, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        <table>
                            <tr>
                                @{
                          for (int i = 0; i < Model.AssignedCategories.Count; i++)
                          {

                            <td>
                                @Html.HiddenFor(m => m.AssignedCategories[i].Category.Id)
                                @Html.HiddenFor(m => m.AssignedCategories[i].Category.CategoryName)
                                @Html.CheckBoxFor(m => m.AssignedCategories[i].Assigned)
                            </td>
                                    <td style="padding-right: 10px">
                                        @Model.AssignedCategories[i].Category.CategoryName
                                    </td>
                                    @((i+1)%3==0 ? Html.Raw("</tr><tr>") : Html.Raw(""))
                          }
                                }
                            </tr>
                        </table>
                    </div>
                </div>


                <div class="form-group">
                    @Html.Label("Upload project", new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        <input type="file" id="File" name="file" />
                    </div>
                    <span class="field-validation-valid text-danger">@ViewBag.NoFileMessage</span>
                </div>
            </div>
                        <div class="form-group">
                            <div class="col-md-offset-5 col-md-6">
                                <input type="submit" value="Create" class="btn btn-default" />
                            </div>
                        </div>
            </div>
          </div>
                    }

                    <div>
                        @Html.ActionLink("Back to List", "Index")
                    </div>

                    @section Scripts {
                        @Scripts.Render("~/bundles/jqueryval")
                    }
